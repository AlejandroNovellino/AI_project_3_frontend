<Row id="uploadRow">
					<p
						className="fs-1 d-flex justify-content-center align-items-center"
						style={{ marginBottom: "40px", fontWeight: "bold" }}>
						Remove Your Video Background
					</p>
				</Row>
				<Row>
					<p className="fs-3" style={{ marginBottom: "40px" }}>
						Upload a video from your files
					</p>
				</Row>
				<Row
					className="justify-content-md-center"
					style={{ marginBottom: "90px" }}>
					<Col xs={6}>
						<Card className="card-custom tw-backdrop-blur-sm card-shadow-custom">
							<Card.Body>
								<Card.Title className="text-center">
									Your uploaded video
								</Card.Title>
								<Container className="mb-3 rounded-5">
									{(videoFile || videoUrl) &&
										videoFile[0] &&
										(videoFile[0].type === "image/gif" ? (
											<img
												src={URL.createObjectURL(videoFile[0])}
												alt="GIF"
												className="rounded"
												style={{ width: "100%", height: "100%" }}
											/>
										) : (
											<ReactPlayer
												className="rounded"
												width="100%"
												height="100%"
												controls={true}
												loop={true}
												url={
													videoUrl ||
													(videoFile && URL.createObjectURL(videoFile[0]))
												}
											/>
										))}
								</Container>
								<Container>
									<Form onSubmit={handleSubmit(onSubmitDeleteBackground)}>
										<Form.Group className="mb-3" controlId="videoFile">
											<Form.Control
												{...register("videoFile")}
												type="file"
												placeholder="Enter your video"
												isInvalid={errors.videoFile?.message}
												isValid={
													!Object.hasOwn(errors, "videoFile") &&
													videoFile !== null
												}
												name="videoFile"
											/>
											<Form.Control.Feedback type="invalid">
												{errors.video?.message}
											</Form.Control.Feedback>
										</Form.Group>

										<div className="d-grid gap-2 my-3">
											<Button type="submit" className="button-custom">
												<span className="bold-text">Delete background</span>
											</Button>
										</div>
									</Form>
									<Row>
										<Col xs={12}>
											{showAlert && (
												<MyAlert
													headingMessage={"Oh no!"}
													message={errorMessage}
													setShow={setShowAlert}
												/>
											)}
										</Col>
									</Row>
								</Container>
							</Card.Body>
						</Card>
					</Col>
					<Col xs={6}>
						<Card className="card-custom tw-backdrop-blur-sm card-shadow-custom">
							<Card.Body>
								<Card.Title className="text-center">
									Your modified video
								</Card.Title>
								<Container className="mb-3 rounded-5">
									<Row className="justify-content-md-center">
										{!isLoadingVideoFile &&
											!isErrorVideoFile &&
											!isLoadingVideoUrl &&
											!isErrorVideoUrl && (
												<Col xs={12}>
													{videoFileData?.output_url?.endsWith(".gif") ? (
														<img
															src={videoFileData?.output_url}
															alt="GIF"
															className="rounded"
															style={{ width: "100%", height: "100%" }}
														/>
													) : (
														<ReactPlayer
															className="rounded"
															width="100%"
															height="100%"
															controls={true}
															loop={true}
															url={
																videoFileData?.output_url ||
																videoUrlData?.output_url
															}
														/>
													)}
													{(videoFileData?.output_url ||
														videoUrlData?.output_url) && (
														<div className="d-grid gap-2 my-3">
															<Button
																variant="primary"
																href={
																	videoFileData?.output_url ||
																	videoUrlData?.output_url
																}
																download
																className="mt-5 bold-button">
																Download
															</Button>
														</div>
													)}
												</Col>
											)}
										{(isLoadingVideoFile || isLoadingVideoUrl) && (
											<Col xs={2} className="mt-4">
												<l-squircle
													size="60"
													stroke="7"
													stroke-length="0.15"
													bg-opacity="0.15"
													speed="01"
													color="white"></l-squircle>
											</Col>
										)}
										{isErrorVideoFile && (
											<Col xs={8}>
												<p className="h4">
													Something bad happened in our end :c
												</p>
											</Col>
										)}
									</Row>
								</Container>
							</Card.Body>
						</Card>
					</Col>
				</Row>